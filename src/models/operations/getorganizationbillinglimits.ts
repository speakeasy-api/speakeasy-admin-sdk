/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetOrganizationBillingLimitsRequest = {
  /**
   * Unique identifier of the organization.
   */
  organizationID: string;
};

/**
 * OK
 */
export type GetOrganizationBillingLimitsResponse = {
  billingLimits: Array<components.BillingLimit>;
};

/** @internal */
export const GetOrganizationBillingLimitsRequest$inboundSchema: z.ZodType<
  GetOrganizationBillingLimitsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  organizationID: z.string(),
});

/** @internal */
export type GetOrganizationBillingLimitsRequest$Outbound = {
  organizationID: string;
};

/** @internal */
export const GetOrganizationBillingLimitsRequest$outboundSchema: z.ZodType<
  GetOrganizationBillingLimitsRequest$Outbound,
  z.ZodTypeDef,
  GetOrganizationBillingLimitsRequest
> = z.object({
  organizationID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrganizationBillingLimitsRequest$ {
  /** @deprecated use `GetOrganizationBillingLimitsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetOrganizationBillingLimitsRequest$inboundSchema;
  /** @deprecated use `GetOrganizationBillingLimitsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetOrganizationBillingLimitsRequest$outboundSchema;
  /** @deprecated use `GetOrganizationBillingLimitsRequest$Outbound` instead. */
  export type Outbound = GetOrganizationBillingLimitsRequest$Outbound;
}

export function getOrganizationBillingLimitsRequestToJSON(
  getOrganizationBillingLimitsRequest: GetOrganizationBillingLimitsRequest,
): string {
  return JSON.stringify(
    GetOrganizationBillingLimitsRequest$outboundSchema.parse(
      getOrganizationBillingLimitsRequest,
    ),
  );
}

export function getOrganizationBillingLimitsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetOrganizationBillingLimitsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetOrganizationBillingLimitsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOrganizationBillingLimitsRequest' from JSON`,
  );
}

/** @internal */
export const GetOrganizationBillingLimitsResponse$inboundSchema: z.ZodType<
  GetOrganizationBillingLimitsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  billing_limits: z.array(components.BillingLimit$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "billing_limits": "billingLimits",
  });
});

/** @internal */
export type GetOrganizationBillingLimitsResponse$Outbound = {
  billing_limits: Array<components.BillingLimit$Outbound>;
};

/** @internal */
export const GetOrganizationBillingLimitsResponse$outboundSchema: z.ZodType<
  GetOrganizationBillingLimitsResponse$Outbound,
  z.ZodTypeDef,
  GetOrganizationBillingLimitsResponse
> = z.object({
  billingLimits: z.array(components.BillingLimit$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    billingLimits: "billing_limits",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrganizationBillingLimitsResponse$ {
  /** @deprecated use `GetOrganizationBillingLimitsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetOrganizationBillingLimitsResponse$inboundSchema;
  /** @deprecated use `GetOrganizationBillingLimitsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetOrganizationBillingLimitsResponse$outboundSchema;
  /** @deprecated use `GetOrganizationBillingLimitsResponse$Outbound` instead. */
  export type Outbound = GetOrganizationBillingLimitsResponse$Outbound;
}

export function getOrganizationBillingLimitsResponseToJSON(
  getOrganizationBillingLimitsResponse: GetOrganizationBillingLimitsResponse,
): string {
  return JSON.stringify(
    GetOrganizationBillingLimitsResponse$outboundSchema.parse(
      getOrganizationBillingLimitsResponse,
    ),
  );
}

export function getOrganizationBillingLimitsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetOrganizationBillingLimitsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetOrganizationBillingLimitsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOrganizationBillingLimitsResponse' from JSON`,
  );
}
