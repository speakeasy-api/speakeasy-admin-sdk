// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package handler

import (
	"context"
	"mockserver/internal/logging"
	"mockserver/internal/tracking"
	"net/http"
)

// GeneratedHandlers returns all generated handlers.
func GeneratedHandlers(ctx context.Context, dir *logging.HTTPFileDirectory, rt *tracking.RequestTracker) []*GeneratedHandler {
	return []*GeneratedHandler{
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organization", pathGetV1AdminOrganization(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organizations", pathGetV1AdminOrganizations(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organizations/add_ons", pathGetV1AdminOrganizationsAddOns(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organizations/{organizationID}/add_ons", pathGetV1AdminOrganizationsOrganizationIDAddOns(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organizations/{organizationID}/billing_limits", pathGetV1AdminOrganizationsOrganizationIDBillingLimits(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organizations/{organizationID}/usage", pathGetV1AdminOrganizationsOrganizationIDUsage(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/organizations/{organizationID}/workspaces", pathGetV1AdminOrganizationsOrganizationIDWorkspaces(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/search_events", pathGetV1AdminSearchEvents(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/user", pathGetV1AdminUser(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/users", pathGetV1AdminUsers(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/users/{userID}/workspaces", pathGetV1AdminUsersUserIDWorkspaces(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/workspace", pathGetV1AdminWorkspace(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/workspaces", pathGetV1AdminWorkspaces(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/admin/workspaces/{workspaceID}/users", pathGetV1AdminWorkspacesWorkspaceIDUsers(dir, rt)),
	}
}
