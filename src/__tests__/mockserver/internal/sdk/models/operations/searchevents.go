// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type SearchEventsRequest struct {
	GenerateTarget          *string                     `queryParam:"style=form,explode=true,name=generate_target"`
	ExecutionID             *string                     `queryParam:"style=form,explode=true,name=execution_id"`
	GenerateGenLockID       *string                     `queryParam:"style=form,explode=true,name=generate_gen_lock_id"`
	InteractionType         *components.InteractionType `queryParam:"style=form,explode=true,name=interaction_type"`
	LintReportDigest        *string                     `queryParam:"style=form,explode=true,name=lint_report_digest"`
	OpenapiDiffReportDigest *string                     `queryParam:"style=form,explode=true,name=openapi_diff_report_digest"`
	SourceRevisionDigest    *string                     `queryParam:"style=form,explode=true,name=source_revision_digest"`
	WorkspaceID             *string                     `queryParam:"style=form,explode=true,name=workspace_id"`
	Limit                   *int64                      `default:"250" queryParam:"style=form,explode=true,name=limit"`
	Success                 *bool                       `queryParam:"style=form,explode=true,name=success"`
}

func (s SearchEventsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SearchEventsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SearchEventsRequest) GetGenerateTarget() *string {
	if o == nil {
		return nil
	}
	return o.GenerateTarget
}

func (o *SearchEventsRequest) GetExecutionID() *string {
	if o == nil {
		return nil
	}
	return o.ExecutionID
}

func (o *SearchEventsRequest) GetGenerateGenLockID() *string {
	if o == nil {
		return nil
	}
	return o.GenerateGenLockID
}

func (o *SearchEventsRequest) GetInteractionType() *components.InteractionType {
	if o == nil {
		return nil
	}
	return o.InteractionType
}

func (o *SearchEventsRequest) GetLintReportDigest() *string {
	if o == nil {
		return nil
	}
	return o.LintReportDigest
}

func (o *SearchEventsRequest) GetOpenapiDiffReportDigest() *string {
	if o == nil {
		return nil
	}
	return o.OpenapiDiffReportDigest
}

func (o *SearchEventsRequest) GetSourceRevisionDigest() *string {
	if o == nil {
		return nil
	}
	return o.SourceRevisionDigest
}

func (o *SearchEventsRequest) GetWorkspaceID() *string {
	if o == nil {
		return nil
	}
	return o.WorkspaceID
}

func (o *SearchEventsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SearchEventsRequest) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

type SearchEventsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful CLI Event response
	CliEvents []components.CliEvent
}

func (o *SearchEventsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SearchEventsResponse) GetCliEvents() []components.CliEvent {
	if o == nil {
		return nil
	}
	return o.CliEvents
}
